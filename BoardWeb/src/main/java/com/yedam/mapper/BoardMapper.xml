<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.mapper.BoardMapper">

	<!-- 조회(selectBoard) -->
	<select id="selectList" resultType="com.yedam.vo.BoardVO">
		select * from tbl_board
		order
		by board_no
	</select>


	<!-- 페이징 조회 -->
	<select id="selectListWithPaging" parameterType="Search" resultType="Board">
		select b.*
		from (select rownum rn, a.*
		      from (select *
		            from tbl_board
		
		<choose>  <!-- 조건문 choose -->
		<when test="searchCondition != null and searchCondition == 'T'.toString()" ><!-- 문자열비교인 equals 사용 불가능해서 == 뒤로 toString 사용 -->
		where title like '%'||#{keyword}||'%' 
		</when>
		
		<when test="searchCondition != null and searchCondition == 'W'.toString()" >
		where writer like '%'||#{keyword}||'%'
		</when>
		
		<when test = "searchCondition != null and searchCondition == 'TW'.toString()" >
		where (title like '%'||#{keyword}||'%') or (writer like '%'||#{keyword}||'%')
		</when>
		</choose>
		order by board_no desc) a) b
		where b.rn > (#{page} -1) * 5 
    <![CDATA[ 
 and b.rn <= #{page} * 5
    ]]> <!-- CDATA로 감싸는 이유는 꺽세있으면 시작으로 인지해서 오류뜨기때문 -->
	</select>

	<!-- 상세조회(selectBoard) -->
	<select id="selectBoard" parameterType="int" resultType="Board">
		select board_no
		,title
		,content
		,writer
		,write_date
		,read_cnt
		from tbl_board
		where board_no = #{bno}
	</select> <!-- 주소값이 아이디로 들어감 -->

	<!-- 조회수증가 -->
	<update id="updateReadCnt" parameterType="int">
		update tbl_board
		set read_cnt = read_cnt +1
		where board_no = #{bno}
	</update>

	<!-- 등록(insertBoard) -->
	<insert id="insertBoard" parameterType="Board"> <!-- mybatis에서 board안에 com.yedam.vo.BoardVO값을 넣어서 그냥 board만 사용가능 -->
		insert into tbl_board(board_no, title, content, writer)
		values(board_seq.nextval, #{title}, #{content}, #{writer})  <!-- {}안에 있는 
			값은 BoardVO가 가지고있는 필드 -->
	</insert>



	<!-- 수정(updateBoard) -->
	<update id="updateBoard" parameterType="Board">
		update tbl_board
		<set>
			<if test="title != null">
				title = #{title},
			</if>
			<if test="content != null">
				content = #{content},
			</if>
			<if test="writer != null">
				writer = #{writer}
			</if>
		</set>
		where board_no = #{boardNo}
	</update>

	<!-- 삭제(deleteBoard) parameterType="int" (보드넘버가 int타입) -->
	<delete id="deleteBoard" parameterType="int">
		delete tbl_board
		where
		board_no = #{boardNo}
	</delete>


	<!-- 전체건수 -->
	<select id="selectCount" resultType="int" parameterType= "Search">
	select count(1) from tbl_board
	<choose>  <!-- 조건문 choose -->
		<when test="searchCondition != null and searchCondition == 'T'.toString()" ><!-- 문자열비교인 equals 사용 불가능해서 == 뒤로 toString 사용 -->
		where title like '%'||#{keyword}||'%' 
		</when>
		
		<when test="searchCondition != null and searchCondition == 'W'.toString()" >
		where writer like '%'||#{keyword}||'%'
		</when>
		
		<when test = "searchCondition != null and searchCondition == 'TW'.toString()" >
		where (title like '%'||#{keyword}||'%') or (writer like '%'||#{keyword}||'%')
		</when>
		</choose>
	</select>

	<!-- 조회 -->
	<select id = "selectUserByCount" resultType="map">
	  select writer as "writer", 
	         member_name as "memberName",
	         count(1) as "cnt"
      from tbl_board b
      join tbl_member m
      on b.writer = m.member_id
      group by writer, member_name
	</select>


  <!-- 조회(selectEvent) -->
	<select id="selectEvent" resultType="com.yedam.vo.EventVO">
		select title, d_start as "start", d_end as "end" 
		from tbl_events
		order by title
	</select>
  
  <!-- 등록(insertEvent) -->
  <insert id="insertEvent" parameterType="com.yedam.vo.EventVO">
    insert into tbl_events(title, d_start, d_end)
    values (#{title}, #{start}, #{end})
  </insert>
  
  <!-- 삭제(deleteEvent) -->
  <delete id="deleteEvent" parameterType="com.yedam.vo.EventVO">
		delete tbl_events
		where title = #{title}
		and d_start = #{start}
  </delete>
	
</mapper>